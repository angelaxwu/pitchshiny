install.packages("swirl")
install.packages("dplyr")
install.packages("igraph")
install.packages("reshape2")
install.packages("ggplot2")
99999/99
if (99x +1010.1(1-x)==x +99(1-x) {x}
if (99*x +1010.1*(1-x)==x +99*(1-x) {x}
if (99*x +1010.1*(1-x)==x +99*(1-x)) {x}
x<-numeric()
if (99*x +1010.1*(1-x)==x +99*(1-x)) {x}
if (99*x +1010.1*(1-x)==x +99*(1-x)) {print(x)}
if (2*==x +4 {print(x)}
if (2*==x +4) {print(x)}
if (2*x==x +4) {print(x)}
(1010-99)/1011
99900*.99
99900*.01
100/(99+999)
install.packages("boot")
6333/4
install.packages("shiny")
library(shiny)
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Hello Shiny!"),
sidebarPanel(
textInput(inputId="text1", label = "Input Text1"),
textInput(inputId="text2", label = "Input Text2")
),
mainPanel(
p('Output text1'),
textOutput('text1'),
p('Output text2'),
textOutput('text2'),
p('Output text3'),
textOutput('text3'),
p('Outside text'),
textOutput('text4'),
p('Inside text, but non-reactive'),
textOutput('text5')
)
))
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h3('Sidebar text')
),
mainPanel(
h3('Main Panel text')
)
))
shinyServer(
function(input, output) {
}
)
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products")
runapp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("usingR")
install.packages("UsingR")
runApp()
runApp(display.mode = 'showcase')
install.packages("manipulate")
library(manipulate)
manipulate(plot(1:x), x=slider(1,100))
install.packages("rCharts")
require(rCharts)
install.packages('rCharts')
require(devtools)
install_github('rCharts', 'ramnathv')
require(rCharts)
haireye = as.data.frame(HairEyeColor)
nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
n1
n1$html()
names(iris) = gsub("\\.", "", names(iris))
r1 <- rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1
?rPlot
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
r1$print("chart1") # print out the js
r1$save('myPlot.html') #save as html file
install.packages("morris")
?mPlot
install.packages("sensitivity")
?mPlot
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$save('fig/m1.html', cdn = TRUE)
cat('<iframe src="fig/m1.html" width=100%, height=600></iframe>')
m1
remove.packages("sensitivity")
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup </p>")
map3$save('fig/map3.html', cdn = TRUE)
cat('<iframe src="fig/map3.html" width=100%, height=600></iframe>')
map3
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(name='angelaxwu', token='3BE70B9E45868D3ADF5906671A153130', secret='44Skgux1JvFXcJOhvFD1XvK8l2hsD3ShlDJblqDm')
deployApp()
install_github("ropensci/plotly")
library(plotly)
install_github("slidiy", 'ramnathv')
install_github('slidiy', 'ramnathv')
install_github(ramnathv/slidify)
install_github("ramnathv/slidify")
install_github("ramnathv/slidifyLibraries")
library(slidify)
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products/slidify")
author("huai")
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
install_version("stringr")
install.packages(package, repos = repos, contriburl = contriburl,
install_version("stringr")
library(devtools)
install_version("stringr")
install.packages(package, repos = repos, contriburl = contriburl,
)
install_version("stringr")
library(devtools)
install_version("stringr")
install.packages(package, repos = repos, contriburl = contriburl,
install.packages('stringr')
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install_version("stringr", version="0.6.2", type = "source")
library(devtools)
install_version("stringr", version="0.6.2", type = "source")
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products/slidify/huai")
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
install_github('ramnathv/slidify', ref = github_pull(425))
install.packages('stringr')
devtools::install_github('muschellij2/slidify')
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
devtools::install_github('muschellij2/slidify')
devtools::install_github('muschellij2/slidify')
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products/slidify/huai")
library(slidify)
slidify('index.Rmd')
install.packages('stringr')
install.packages("stringr")
install.packages("stringr")
