install.packages("swirl")
install.packages("dplyr")
install.packages("igraph")
install.packages("reshape2")
install.packages("ggplot2")
99999/99
if (99x +1010.1(1-x)==x +99(1-x) {x}
if (99*x +1010.1*(1-x)==x +99*(1-x) {x}
if (99*x +1010.1*(1-x)==x +99*(1-x)) {x}
x<-numeric()
if (99*x +1010.1*(1-x)==x +99*(1-x)) {x}
if (99*x +1010.1*(1-x)==x +99*(1-x)) {print(x)}
if (2*==x +4 {print(x)}
if (2*==x +4) {print(x)}
if (2*x==x +4) {print(x)}
(1010-99)/1011
99900*.99
99900*.01
100/(99+999)
install.packages("boot")
6333/4
install.packages("shiny")
library(shiny)
library(pryr)
install.packages("pryr")
ftype(show)
library(pryr)
ftype(show)
showMethods("show")
?getMethod
?showMethods
getMethod(getMethod()")
getMethod("show")
install.packages("yhat")
library (yhat)
?model.predict
library(shiny)
shiny::runApp()
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(dplyr)
setwd("~/Dropbox/0Projects/Global internet historical comparative/Project_Node_level_analysis/final datasets")
coding <- read.csv("./classification/Completed_coding/coding_cleaned.csv")
source("test.R")
measureset <- c("Eigenvector.Centrality", "Closeness.Centrality", "Betweenness.Centrality", "Clustering.Coefficient", "Degree", "Number.of.triangles")
datayear <-c(2009, 2011, 2013)
measureovertime <- extract_multiple(datayear, measureset)
dat <- full_join(measureovertime, coding)
dat <- dat %>%
filter(!is.na(year))
View(dat)
# arrives at the website types of interest
categories <- as.numeric(dat$base)
categories <- ifelse(categories==4, 3, categories)      # 3 Portals
categories <- ifelse(categories==6, 5, categories)      # 5 Single Content Producer / Publisher
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base)))
ggplot(d1, aes(x=year, y=rank, color=base)) + geom_line(aes(group=base)) +
geom_point(size=1, shape=21) +
facet_grid(measure~.) + facet_wrap( ~ measure, nrow=3) + facet_wrap( ~ measure, ncol=2) +
ggtitle("Ranking Changes in Different Measures \nfor Each Base Categories Over Time") +
scale_y_reverse()       # more intuitive in detecting ranking changes
#        theme(legend.position="bottom")
d4 <- dat %>%
group_by(year, measure, ugc) %>%
summarise(rank=mean(rank)) %>%
mutate (ugc=ifelse(is.na(ugc), "0 No Information", as.character(ugc)))
ggplot(d4, aes(x=year, y=rank, color=ugc)) + geom_line(aes(group=ugc)) +
geom_point(size=1, shape=21) +
facet_grid(measure~.) + facet_wrap( ~ measure, nrow=3) + facet_wrap( ~ measure, ncol=2) +
ggtitle("Ranking Changes in Different Measures \nfor UGC Sites Over Time") +
scale_y_reverse()
head(dat)
tail(dat)
summary(dat$base)
str(dat$base)
level(dat$base)
levels(dat$base)
class(levels(dat$base))
str(levels(dat$base))
levels(dat$measure)
shiny::runApp('~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products')
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products")
ls()
dat <- read.csv("dat.csv")
head(dat)
dat <- read.csv("dat.csv", row.names = F)
dat <- read.csv("dat.csv", row.names = NULL)
head(dat)
dat <- read.csv("dat.csv", stringsAsFactors = F)
head(dat)
dat <- dat[,-1]
head(dat)
shiny::runApp()
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "1 Search Engine" && measure=="Eigenvector.Centrality")
d1
d1 <- dat %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "1 Search Engine" && measure=="Eigenvector.Centrality")
libary(dplyr)
library(dplyr)
d1 <- dat %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "1 Search Engine" && measure=="Eigenvector.Centrality")
dat
head(dat)
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "1 Search Engine" && measure == "Eigenvector.Centrality")
d1
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "1 Search Engine" && measure == "Eigenvector.Centrality")
d1
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "1 Search Engine")
d1
class(d1$measure)
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "1 Search Engine", measure == "Eigenvector.Centrality")
d1
ggplot(d1, aes(x=year, y=rank)) + geom_line(aes(group=base)) +
geom_point(size=1, shape=21) +
ggtitle("Ranking Changes in Different Measures \nfor Each Base Categories Over Time") +
scale_y_reverse()
shiny::runApp()
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base))) %>%
filter(base == "9 E-Commerce / Retail: platforms for sellers other than themselves", measure == "Eigenvector.Centrality")
d1
str(dat)
summary(dat@base)
str(dat@base)
dat <- read.csv("dat.csv", stringsAsFactors = F)
dat <- dat[,-1]
summary(dat@base)
summary(dat$base)
str(dat$base)
table(dat$base)
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base)))
d1
d1 <- dat %>%
+     group_by(year, measure, base) %>%
+     summarise(rank=mean(rank))
head(dat)
d1 <- dat %>%
+     +     group_by(year, measure, base)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
levels(dat)
dat <- read.csv("dat.csv", stringsAsFactors = F)
dat <- dat[,-1]
levels(dat)
levels(dat$base)
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base)))
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank)) %>%
mutate (base=ifelse(is.na(base), "0 No Information", as.character(base)))
d1
d1 <- dat %>%
group_by(year, measure, base) %>%
summarise(rank=mean(rank))
d1
d1 <- dat %>%
group_by(year, measure, base)
d1
d2 <- summarise(d1, rank=mean(rank))
d2
head(d2)
str(d2)
table(d2$base)
shiny::runApp()
dat <- read.csv("dat.csv")
dat <- dat[,-1]
levels(dat$base)
levels(dat$base) <- c("Search Engine", "Social Network", "News Portal", "Entertainment Portal" , "News Content Producer/Publisher", "Entertainment Content Producer/Publisher",
"Online Department Store",
"Individual Goods/Service Provider",
"E-Marketplace")
table(dat$base)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
d2 <- dat %>%
filter(year=="2009", measure=="Eigenvector.Centrality", base=="Social Media")
d2
head(dat)
d2 <- dat %>%
filter(year=="2009", measure=="Eigenvector.Centrality")
d2
d2 <- dat %>%
filter(year=="2009", measure=="Eigenvector.Centrality", base=="Social Network")
d2
shiny::runApp()
ggplot(d2,aes(x=rank))+geom_histogram()
ggplot(d2,aes(x=rank))+geom_histogram() +
ggtitle(paste("Histogram of Rankings of", "Social Network", "(", "2009", ")"))
shiny::runApp()
head(dat)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library("shinyapps")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
d2
head(d2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
scores <-rnorm(1000)
str(scores)
scorerank <- order(score)
scorerank <- order(scores)
str(scorerank)
sample(1:100,1000,replace=T)
sample(1:1000,120,replace=T)
length(unique(sample(1:1000, 120, replace=T)))
sample(1:1000,120,replace=F)
length(unique(sample(1:1000, 120, replace=F)))
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
scorerank <- order(score) # generate rankngs accordingly
dat <- cbind(score, scorerank); dat_onecat <- dat[sample(1:1000,120,replace=F),] #generate data of one "category" (of 120 websites in this case)
str(dat_onecat)
head(dat)
ggplot(dat_onecat,aes(x=scorerank, y=score, colour=base)) +
geom_point(size=2) +
gtitle(paste("Scatterplot of Measure Scores (given year)"))
class(dat_onecat)
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
scorerank <- order(score) # generate rankngs accordingly
dat <- data.frame(cbind(score, scorerank))
dat_onecat <- dat[sample(1:1000,120,replace=F),] #generate data of one "category" (of 120 websites in this case)
class(dat_onecat)
ggplot(dat_onecat,aes(x=scorerank, y=score, colour=base)) +
geom_point(size=2) +
gtitle(paste("Scatterplot of Measure Scores (given year)"))
ggplot(dat_onecat,aes(x=scorerank, y=score, colour=base)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
ggplot(dat_onecat,aes(x=scorerank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
?order
ggplot(dat,aes(x=scorerank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
head(dat)
?sort
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
scorerank <- sort(score) # generate rankngs accordingly
dat <- data.frame(cbind(score, scorerank))
dat_onecat <- dat[sample(1:1000,120,replace=F),] #generate data of one "category" (of 120 websites in this case)
ggplot(dat_onecat,aes(x=scorerank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
head(dat)
ggplot(scorerank) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
scorerank <- order(score) # generate rankngs accordingly
dat <- data.frame(cbind(score, scorerank))
head(dat)
ggplot(dat_onecat,aes(x=scorerank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
ggplot(dat,aes(x=scorerank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
score[scorerank]
score <- score[order(-score)]
score
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
score <- score[order(-score)] # generate rankngs accordingly
dat <- data.frame(cbind(score, 1:1000))
dat_onecat <- dat[sample(1:1000,120,replace=F),] #generate data of one "category" (of 120 websites in this case)
ggplot(dat_onecat,aes(x=scorerank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
score <- score[order(-score)] # generate rankngs accordingly
dat <- data.frame(cbind(score, rank=1:1000))
dat_onecat <- dat[sample(1:1000,120,replace=F),] #generate data of one "category" (of 120 websites in this case)
ggplot(dat_onecat,aes(x=rank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores (given year)"))
```
## first generate the data (this is not the real dataset being used in the app)
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
score <- score[order(-score)] # generate rankngs accordingly
dat <- data.frame(cbind(score, rank=1:1000))
dat_onecat <- dat[sample(1:1000,100,replace=F),] #generate data of one "category" (of 100 websites in this case)
ggplot(dat_onecat,aes(x=rank, y=score)) +
geom_point(size=2) +
ggtitle(paste("Scatterplot of Measure Scores of Websites belong to X category (Year XXXX)"))
## first generate the data (this is NOT the real dataset being used in the app)
score <-rnorm(1000) # generate a random series as the scores of the 1000 websites
score <- score[order(-score)] # generate rankngs accordingly
dat <- data.frame(cbind(score, rank=1:1000))
dat_onecat <- dat[sample(1:1000,100,replace=F),] #generate data of one "category" (of 100 websites in this case)
ggplot(dat_onecat, aes(x=rank)) +
geom_histogram(binwidth = 50) +
ggtitle(paste("Histogram of Rankings of One Website Category (Year XXX)"))
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products/slidify/huai")
publish(user="angelaxwu", repo="slidifytest")
library(slidify)
publish(user="angelaxwu", repo="slidifytest")
publish(user="angelaxwu", repo="slidifytest")
publish(user="angelaxwu", repo="slidifytest")
setwd("~/Dropbox/Ubuntu_stuff/Johns_Hopkins_DS/9Products/slidify/huai")
publish(user="angelaxwu", repo="slidifytest")
library(slidify)
publish(user="angelaxwu", repo="slidifytest")
getwd()
publish(title='shinypitch', 'index.html', host='rpubs')
publish_rpubs("shinypitch", html_file = "index.html")
find.package("RCurl")
.libPaths( "")
